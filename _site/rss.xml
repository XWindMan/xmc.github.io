<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WindMan Blog</title>
    <description>风一样de男子</description>
    <link>//</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 31 Jan 2023 15:27:18 +0800</pubDate>
    <lastBuildDate>Tue, 31 Jan 2023 15:27:18 +0800</lastBuildDate>
    <generator>Jekyll v4.3.1</generator>
    
      <item>
        <title>Android知识点</title>
        <description>&lt;ul&gt;
  &lt;li&gt;Intent 传值的上限。
    &lt;blockquote&gt;
      &lt;p&gt;取决于binder事务缓存的分配，每个进程分配1M。&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 21 Jan 2023 00:00:00 +0800</pubDate>
        <link>/2023/01/21/%E6%8A%80%E6%9C%AF%E7%82%B9.html</link>
        <guid isPermaLink="true">/2023/01/21/%E6%8A%80%E6%9C%AF%E7%82%B9.html</guid>
        
        <category>Android</category>
        
        
        <category>Android</category>
        
      </item>
    
      <item>
        <title>心声</title>
        <description>&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;哲学如果需要举例来证明，那它就很快会夸，只可意会。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;随着年纪的增大，过年已经不在乎是否精彩，而是觉得，陪伴、相聚变得很珍贵。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 12 Jan 2023 00:00:00 +0800</pubDate>
        <link>/2023/01/12/%E5%BF%83%E5%A3%B0.html</link>
        <guid isPermaLink="true">/2023/01/12/%E5%BF%83%E5%A3%B0.html</guid>
        
        <category>read</category>
        
        
        <category>read</category>
        
      </item>
    
      <item>
        <title>JS</title>
        <description>&lt;ul&gt;
  &lt;li&gt;创建对象&lt;/li&gt;
  &lt;li&gt;临时用
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; var obj={}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;工厂
 ```
 function createAlarm(date,repeat){
 	return {
 		date:date,
 		repeat:repeat
 	}
 }&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
 - 可以new的
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;function Alarm(date,repeat){
 	this.date=date
 	this.repeat=repeat
 	this.test=function(){
 		console.log(date.getTime())
 	}
 }&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
+ 时间对象Date 
 - new Date() 可以指定时间
 - 可以获取年月日时分秒
 - 通过getTime()比较先后

+ 枚举。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;var CMDType = {
    MOTOR: 1,
    ALARM: 2, 
    RING: 3 
}
```&lt;/p&gt;
</description>
        <pubDate>Tue, 29 Nov 2022 00:00:00 +0800</pubDate>
        <link>/2022/11/29/JS.html</link>
        <guid isPermaLink="true">/2022/11/29/JS.html</guid>
        
        <category>JS</category>
        
        
      </item>
    
      <item>
        <title>基金</title>
        <description>&lt;ul&gt;
  &lt;li&gt;下载、安装、移除Quarantine
https://www.jianshu.com/p/ddeb6c4f5c01&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 22 Nov 2022 00:00:00 +0800</pubDate>
        <link>/2022/11/22/ps.html</link>
        <guid isPermaLink="true">/2022/11/22/ps.html</guid>
        
        <category>ps</category>
        
        
        <category>Tools</category>
        
      </item>
    
      <item>
        <title>BLE</title>
        <description>&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;通用服务
&lt;img src=&quot;/assets/img/ble_uuid.png&quot; alt=&quot;截图&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ADType
&lt;img src=&quot;/assets/img/ble.png&quot; alt=&quot;截图&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 21 Nov 2022 00:00:00 +0800</pubDate>
        <link>/2022/11/21/ble.html</link>
        <guid isPermaLink="true">/2022/11/21/ble.html</guid>
        
        <category>ble</category>
        
        
        <category>Android</category>
        
      </item>
    
      <item>
        <title>Google play</title>
        <description>&lt;ul&gt;
  &lt;li&gt;自管签名，千万别用Google play托管的签名&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java -jar pepk.jar --keystore xxxx.jks --alias xxxx --output=xxxxx.zip --encryptionkey=034200041E224EE22B45D4861F9E140F278A5D2860846C2CF5D2C3C02 --include-cert
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;如果不小心被Google 签名了。可以在Google play改成自签名，但是老用户就不会提示升级了。
Facebook需要的key shah，key通过der生成：https://blog.csdn.net/changcsw/article/details/88720357
还原jks：https://blog.csdn.net/Jason_HD/article/details/124443963&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 17 Nov 2022 00:00:00 +0800</pubDate>
        <link>/2022/11/17/Google-play.html</link>
        <guid isPermaLink="true">/2022/11/17/Google-play.html</guid>
        
        <category>Android</category>
        
        
        <category>Android</category>
        
      </item>
    
      <item>
        <title>Android 车载入门</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://developer.android.google.cn/training/cars&quot;&gt;android for car&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;auto-和-automotive&quot;&gt;Auto 和 Automotive&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Automotive是一个和Android一样的系统(os)，扩展了android os，简称AAOS&lt;/li&gt;
  &lt;li&gt;Auto 不是 OS。它是集成在 Android OS 里的 feature。当通过 USB、Wi-Fi 将 Android Phone 连接到支持 Android Auto 的车机上后，Android OS 将自动加载支持 Auto 模式下的 App 并将图像投屏到车机屏幕上。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;安装模拟器&quot;&gt;安装模拟器&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;添加sdk update site：vilvo：https://developer.volvocars.com/sdk/volvo-sys-img.xml&lt;/li&gt;
  &lt;li&gt;下载android10的vilvo的镜像&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 12 Nov 2022 00:00:00 +0800</pubDate>
        <link>/2022/11/12/Android-%E8%BD%A6%E8%BD%BD%E5%85%A5%E9%97%A8.html</link>
        <guid isPermaLink="true">/2022/11/12/Android-%E8%BD%A6%E8%BD%BD%E5%85%A5%E9%97%A8.html</guid>
        
        <category>Android</category>
        
        <category>Auto</category>
        
        
        <category>Android</category>
        
        <category>Auto</category>
        
      </item>
    
      <item>
        <title>随笔</title>
        <description>&lt;p&gt;2022-11-12-随笔.md&lt;/p&gt;

&lt;h2 id=&quot;2022-4-14-阴-中午12点核酸&quot;&gt;2022-4-14 阴 中午12点核酸&lt;/h2&gt;

&lt;h3 id=&quot;钱和我&quot;&gt;钱和我&lt;/h3&gt;

&lt;p&gt;我并不是一个很在乎钱的人&lt;/p&gt;

&lt;p&gt;然而我生活在了一个很在乎钱的时代&lt;/p&gt;

&lt;p&gt;又在一个特别在乎钱的城市&lt;/p&gt;

&lt;h2 id=&quot;2022-4-20-半阴半晴-今天买到馒头了&quot;&gt;2022-4-20 半阴半晴 今天买到馒头了&lt;/h2&gt;

&lt;h3 id=&quot;情绪&quot;&gt;情绪&lt;/h3&gt;

&lt;p&gt;你没有必要告诉或者展现给别人&lt;/p&gt;

&lt;p&gt;你活的很开心&lt;/p&gt;

&lt;p&gt;你只需要回答自己&lt;/p&gt;

&lt;p&gt;你活的并不悲伤&lt;/p&gt;
</description>
        <pubDate>Sat, 12 Nov 2022 00:00:00 +0800</pubDate>
        <link>/2022/11/12/%E9%9A%8F%E7%AC%94.html</link>
        <guid isPermaLink="true">/2022/11/12/%E9%9A%8F%E7%AC%94.html</guid>
        
        <category>Read</category>
        
        
        <category>Read</category>
        
      </item>
    
      <item>
        <title>缓存</title>
        <description>&lt;h1 id=&quot;缓存&quot;&gt;缓存&lt;/h1&gt;

&lt;p&gt;是为了节省时间，达到更快的目的，但是也要考虑缓存带来的负面影响。Android的缓存是基于Java的缓存&lt;/p&gt;

&lt;h2 id=&quot;n级缓存&quot;&gt;n级缓存&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;一级缓存，直接从内存加载&lt;/li&gt;
  &lt;li&gt;二级缓存，先从内存加载；如果内存没有，再从文件加载&lt;/li&gt;
  &lt;li&gt;三级缓存，先看内存；如果没有，去文件找；如果还没有，从网络下载&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;引用&quot;&gt;引用&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;强引用&lt;/li&gt;
  &lt;li&gt;软引用&lt;/li&gt;
  &lt;li&gt;弱引用&lt;/li&gt;
  &lt;li&gt;虚引用&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;常用框架&quot;&gt;常用框架&lt;/h2&gt;

&lt;h3 id=&quot;lrucash&quot;&gt;LRUCash&lt;/h3&gt;

&lt;p&gt;Least recently used，最近最少使用。核心思想是“如果数据最近被访问过，那么将来被访问的几率也更高”。&lt;/p&gt;

&lt;h3 id=&quot;disklrucash&quot;&gt;DiskLRUCash&lt;/h3&gt;

&lt;h3 id=&quot;lru-cash--k&quot;&gt;LRU cash -K&lt;/h3&gt;

&lt;p&gt;K代表最近使用的次数，LRU可以认为是LRU-1。核心思想是将“最近使用过1次”的判断标准扩展为“最近使用过K次”。&lt;/p&gt;

</description>
        <pubDate>Sat, 12 Nov 2022 00:00:00 +0800</pubDate>
        <link>/2022/11/12/%E7%BC%93%E5%AD%98.html</link>
        <guid isPermaLink="true">/2022/11/12/%E7%BC%93%E5%AD%98.html</guid>
        
        <category>Android</category>
        
        
        <category>Android</category>
        
      </item>
    
      <item>
        <title>缓存</title>
        <description>&lt;h2 id=&quot;算法复杂度oy&quot;&gt;算法复杂度O(y)&lt;/h2&gt;

&lt;p&gt;算法是偏底层的东西，最注重效率，这里y其实是一个函数，代表了时间或者空间的复杂度。比如O(n^2)，这里代表复杂度是y=n^2，数据量增大n倍时，耗时需要n^2。常见复杂度如下
&lt;img src=&quot;/assets/img/O(y).png&quot; alt=&quot;复杂度&quot; /&gt;
根据函数可以看到，当x相等时，logx的值最小，logn的效率最高（x代表数据量，y代表耗时或者消耗空间）&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;O(1)&lt;/p&gt;

    &lt;p&gt;这里y=1，无论数据量增大多大，1次就找到，比如哈希算法&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;O(n)&lt;/p&gt;

    &lt;p&gt;数据量增大n倍，耗时也增大n倍。比如常见的遍历算法。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;O(logn)&lt;/p&gt;

    &lt;p&gt;ax =N，x=logaN。数据增大n倍时，耗时增大logn倍（这里的log是以2为底的，比如，当数据增大256倍时，耗时只增大8倍，是比线性还要低的时间复杂度）。二分查找就是O(logn)的算法，每找一次排除一半的可能，256个数据中查找只要找8次就可以找到目标。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;O(nlogn)&lt;/p&gt;

    &lt;p&gt;n乘以logn肯定比logn大，当数据增大256倍时，耗时增大256*8=2048倍。这个复杂度高于线性低于平方。归并排序就是O(nlogn)的时间复杂度。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 12 Nov 2022 00:00:00 +0800</pubDate>
        <link>/2022/11/12/%E7%AE%97%E6%B3%95%E5%A4%8D%E6%9D%82%E5%BA%A6.html</link>
        <guid isPermaLink="true">/2022/11/12/%E7%AE%97%E6%B3%95%E5%A4%8D%E6%9D%82%E5%BA%A6.html</guid>
        
        <category>Android</category>
        
        
        <category>Android</category>
        
      </item>
    
  </channel>
</rss>
