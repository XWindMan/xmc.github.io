<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>雪木 Blog</title>
    <description>风一样de男子</description>
    <link>http://localhost:4000//</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 23 Nov 2023 10:10:11 +0800</pubDate>
    <lastBuildDate>Thu, 23 Nov 2023 10:10:11 +0800</lastBuildDate>
    <generator>Jekyll v4.3.1</generator>
    
      <item>
        <title>数据库</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;数据库&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;数据库概念&quot;&gt;数据库概念&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;table｜schema&lt;/li&gt;
  &lt;li&gt;column 列&lt;/li&gt;
  &lt;li&gt;row 行&lt;/li&gt;
  &lt;li&gt;primary key 主键&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;数据库命令&quot;&gt;数据库命令&lt;/h2&gt;

&lt;h2 id=&quot;查看-show&quot;&gt;查看 SHOW&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;选择数据库：USE xxx&lt;/li&gt;
  &lt;li&gt;展示所有数据库：SHOW DATABASES&lt;/li&gt;
  &lt;li&gt;展示所有表：SHOW TABLES｜SHOW COLUMNS FERM xxx&lt;/li&gt;
  &lt;li&gt;看是状态：SHOW STATUS&lt;/li&gt;
  &lt;li&gt;看错误等：SHOW ERRORS｜ SHOW WARINGS&lt;/li&gt;
  &lt;li&gt;查看权限：SHOW GRANTS&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;检索-select&quot;&gt;检索 SELECT&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;单列：SELECT xx FREOM xx&lt;/li&gt;
  &lt;li&gt;多列：SELECT x,y FROM xxx&lt;/li&gt;
  &lt;li&gt;所有列：SELECT * FROM xxx&lt;/li&gt;
  &lt;li&gt;不同行：SELECT xx FROM xxx，不重复：SELECT DIStINGCT xx FROM xxx&lt;/li&gt;
  &lt;li&gt;限制：LIMIT n&lt;/li&gt;
  &lt;li&gt;限定表名：SELECT table.column FROM table&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;排序检索&quot;&gt;排序检索&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;默认正序：ASC&lt;/li&gt;
  &lt;li&gt;指定条件，加 ORDER BY&lt;/li&gt;
  &lt;li&gt;多列排序：SELECT x, y, FROM table ORDER BY x, y&lt;/li&gt;
  &lt;li&gt;倒序，加 DESC&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sun, 24 Sep 2023 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2023/09/24/database.html</link>
        <guid isPermaLink="true">http://localhost:4000/2023/09/24/database.html</guid>
        
        <category>数据库</category>
        
        
      </item>
    
      <item>
        <title>Android13升级</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Android12升级到Android13&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;多语言支持此功能在国内被阉割&quot;&gt;多语言支持，此功能在国内被阉割&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;配置后在设置内可以选择&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;
&amp;lt;locale-config xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&amp;gt;
    &amp;lt;locale android:name=&quot;zh&quot; /&amp;gt;
    &amp;lt;locale android:name=&quot;en&quot; /&amp;gt;
    &amp;lt;locale android:name=&quot;tw&quot; /&amp;gt;
    &amp;lt;locale android:name=&quot;ar&quot; /&amp;gt;
    &amp;lt;locale android:name=&quot;de&quot; /&amp;gt;
    &amp;lt;locale android:name=&quot;es&quot; /&amp;gt;
    &amp;lt;locale android:name=&quot;fa&quot; /&amp;gt;
    &amp;lt;locale android:name=&quot;fr&quot; /&amp;gt;
    &amp;lt;locale android:name=&quot;it&quot; /&amp;gt;
    &amp;lt;locale android:name=&quot;ja&quot; /&amp;gt;
    &amp;lt;locale android:name=&quot;ko&quot; /&amp;gt;
    &amp;lt;locale android:name=&quot;ms&quot; /&amp;gt;
    &amp;lt;locale android:name=&quot;pl&quot; /&amp;gt;
    &amp;lt;locale android:name=&quot;pt&quot; /&amp;gt;
    &amp;lt;locale android:name=&quot;ru&quot; /&amp;gt;
    &amp;lt;locale android:name=&quot;sk&quot; /&amp;gt;
    &amp;lt;locale android:name=&quot;th&quot; /&amp;gt;
    &amp;lt;locale android:name=&quot;tr&quot; /&amp;gt;
    &amp;lt;locale android:name=&quot;vi&quot; /&amp;gt;
&amp;lt;/locale-config&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;拆分sd卡权限&quot;&gt;拆分sd卡权限&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;把原来的storage权限拆分成image、audio、video三个权限。如果仅仅是操作图片，视频、语音没有操作文件类的，可以使用Android内置的图片选择器。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;String p;
            if (Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.TIRAMISU) {
                p = Manifest.permission.READ_MEDIA_IMAGES;
            } else {
                p = Manifest.permission.READ_EXTERNAL_STORAGE;
            }

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;声明广告id&quot;&gt;声明广告ID&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;如果接入了Google广告，需要声明广告ID权限&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;uses-permission android:name=&quot;com.google.android.gms.permission.AD_ID&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;webview-废弃api&quot;&gt;webview 废弃API&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//  废弃      webSettings.setAppCachePath(appCachePath);
  替代      webSettings.setDatabasePath(appCachePath);
  
//  废弃      webSettings.setAppCacheEnabled(true);
//        setAppCacheEnabled(false) 可以用setCacheMode(WebSettings.LOAD_NO_CACHE)替代。
//        setAppCacheEnabled(true) 可以用setCacheMode(WebSettings.LOAD_DEFAULT)替代      
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Thu, 07 Sep 2023 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2023/09/07/Android13%E5%8D%87%E7%BA%A7.html</link>
        <guid isPermaLink="true">http://localhost:4000/2023/09/07/Android13%E5%8D%87%E7%BA%A7.html</guid>
        
        <category>Android</category>
        
        
      </item>
    
      <item>
        <title>支付宝小程序</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Html 小功能积累&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;小程序&quot;&gt;小程序&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;牛逼，这么多平台
&lt;img src=&quot;https://docimg4.docs.qq.com/image/AgAABh4JP1su1BG13HRG5rjA2mRWumBY.png?w=1036&amp;amp;h=728&quot; alt=&quot;11&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;模版
&lt;img src=&quot;https://docimg5.docs.qq.com/image/AgAABh4JP1sBLA9A-RZB2LNvbk_z52VU.png?w=1014&amp;amp;h=715&quot; alt=&quot;12&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;插件&quot;&gt;插件&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;比小程序少一些平台
&lt;img src=&quot;https://docimg9.docs.qq.com/image/AgAABh4JP1vc-F-YehlMPI087FL0-y71.png?w=1051&amp;amp;h=759&quot; alt=&quot;21&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;只有空白模版
&lt;img src=&quot;https://docimg9.docs.qq.com/image/AgAABh4JP1vvbx7Ewx1GzJCtoMPG-_q3.png?w=1031&amp;amp;h=710&quot; alt=&quot;22&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;create
&lt;img src=&quot;https://docimg2.docs.qq.com/image/AgAABh4JP1u5vFxBZrhB5pf21_JJhiqE.png?w=1022&amp;amp;h=722&quot; alt=&quot;23&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 06 Sep 2023 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2023/09/06/%E6%94%AF%E4%BB%98%E5%AE%9D%E6%8F%92%E4%BB%B6.html</link>
        <guid isPermaLink="true">http://localhost:4000/2023/09/06/%E6%94%AF%E4%BB%98%E5%AE%9D%E6%8F%92%E4%BB%B6.html</guid>
        
        <category>ali</category>
        
        
      </item>
    
      <item>
        <title>html小功能</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Html 小功能积累&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;图片处理&quot;&gt;图片处理&lt;/h2&gt;
&lt;h3 id=&quot;图片链接&quot;&gt;图片链接&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;a href=&quot;超链接地址&quot;&amp;gt;&amp;lt;img src=&quot;路径&quot; alt=&quot;替代文本&quot;&amp;gt;&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;图片不同区域点击跳转不同连接&quot;&gt;图片不同区域点击跳转不同连接&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;连接map&lt;/li&gt;
  &lt;li&gt;设置map&lt;/li&gt;
  &lt;li&gt;设置不同的area&lt;/li&gt;
  &lt;li&gt;设置坐标 coords&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;img src=&quot;./img/bg-home.jpg&quot; alt=&quot;&quot; usemap=&quot;#map&quot;&amp;gt;
&amp;lt;map name=&quot;map&quot; id=&quot;map&quot;&amp;gt;
     &amp;lt;area shape=&quot;poly&quot; coords=&quot;583,382,587,357,609,359,611,283,1014,247,1392,352,1362,410,1218,445,583,382&quot; href=&quot;https://www.baidu.com/&quot; alt=&quot;&quot;&amp;gt;
     &amp;lt;area shape=&quot;poly&quot; coords=&quot;584,392,532,500,1194,587,1386,533,1414,398,1231,448,584,392&quot; href=&quot;https://www.mi.com/&quot; alt=&quot;&quot;&amp;gt;
     &amp;lt;area shape=&quot;poly&quot; coords=&quot;591,520,565,595,510,618,1169,731,1406,641,1395,542,1170,601,591,520&quot; href=&quot;https://huaban.com/&quot; alt=&quot;&quot;&amp;gt;
     &amp;lt;area shape=&quot;poly&quot; coords=&quot;570,641,569,742,1164,867,1395,767,1398,655,1172,734,570,641&quot; href=&quot;https://www.qingnian8.com/&quot; alt=&quot;&quot;&amp;gt;        
&amp;lt;/map&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Wed, 06 Sep 2023 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2023/09/06/html.html</link>
        <guid isPermaLink="true">http://localhost:4000/2023/09/06/html.html</guid>
        
        <category>JS</category>
        
        
        <category>html</category>
        
      </item>
    
      <item>
        <title>Android-权限</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Android,权限&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;蓝牙权限&quot;&gt;蓝牙权限&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;声明权限&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;必须声明neverForLocation，如果不声明就代表需要用蓝牙定位，不主动申请定位就扫描不到设备&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &amp;lt;uses-permission android:name=&quot;android.permission.BLUETOOTH&quot; /&amp;gt;
    &amp;lt;uses-permission android:name=&quot;android.permission.BLUETOOTH_ADMIN&quot; /&amp;gt;

    &amp;lt;uses-permission android:name=&quot;android.permission.ACCESS_COARSE_LOCATION&quot; /&amp;gt; 
    &amp;lt;uses-permission android:name=&quot;android.permission.ACCESS_FINE_LOCATION&quot; /&amp;gt;

	&amp;lt;uses-permission android:name=&quot;android.permission.BLUETOOTH_CONNECT&quot; /&amp;gt;
	&amp;lt;uses-permission
        android:name=&quot;android.permission.BLUETOOTH_SCAN&quot;
        android:usesPermissionFlags=&quot;neverForLocation&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;根据版本申请不同的权限&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;		ArrayList&amp;lt;String&amp;gt; permissions = new ArrayList&amp;lt;&amp;gt;();
        if (Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.S) {
            permissions.add(Manifest.permission.BLUETOOTH_SCAN);
            permissions.add(Manifest.permission.BLUETOOTH_CONNECT);
        } else if (Build.VERSION.SDK_INT &amp;gt; Build.VERSION_CODES.P) {
            permissions.add(Manifest.permission.ACCESS_FINE_LOCATION);
        } else if (Build.VERSION.SDK_INT &amp;gt; Build.VERSION_CODES.M) {
            permissions.add(Manifest.permission.ACCESS_COARSE_LOCATION);
        }

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;部分手机没有BLUETOOTH_SCAN权限，都无法打开蓝牙。&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;if (!bluetoothAdapter.isEnabled()) {
                    new RxPermissions(mActivity).requestEachCombined(Manifest.permission.BLUETOOTH_SCAN, Manifest.permission.BLUETOOTH_CONNECT)
                            .subscribe(new Consumer&amp;lt;Permission&amp;gt;() {
                                @Override
                                public void accept(Permission permission) throws Exception {
                                    Intent enableBtIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);
                                    startActivityForResult(enableBtIntent, OPEN_REQUEST_CODE);
                                }
                            }, new Consumer&amp;lt;Throwable&amp;gt;() {
                                @Override
                                public void accept(Throwable throwable) throws Exception {

                                }
                            });

                } else {
                    requestBlePermission();
                }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;存储权限&quot;&gt;存储权限&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Android10以后，开始分区存储，八大目录不再需要sd卡权限&lt;/li&gt;
  &lt;li&gt;Android13以后，新出 READ_MEDIA_IMAGES &amp;amp; READ_MEDIA_VIDEO 权限。&lt;/li&gt;
  &lt;li&gt;手QQ也不需要sd卡权限&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;权限组，官方说，在Android O之前，同一权限组的权限，只要用户授权一个，则整个权限组都被授权；Android O对此进行了修改。同一权限组不同权限，必须都要动态申请权限。但是如果第一个被用户同意了，后面的同组权限再申请时，就不会再弹窗而是被直接同意了。 but，部分厂商太狗了，改的啥也不符合。安全起见，同组的也申请。例子参考：https://blog.csdn.net/qihoo_tech/article/details/105828426。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;外置sd卡，app私有目录：/storage/emulated/0/Android/data/pkg/files，获取方法：getExternalFilesDir(null)&lt;/li&gt;
  &lt;li&gt;外置sd卡：/mnt/sdcard/ 或者 /storage/emulated/0/&lt;/li&gt;
  &lt;li&gt;app私有目录有两个。卸载后都会删除，都不需要权限，都是其他应用不可访问
    &lt;ul&gt;
      &lt;li&gt;一个在内置sd卡：getFilesDir() 或 getCacheDir() ，文件管理路径：/data/data/package_name/，Android10+，系统会对这些位置加密&lt;/li&gt;
      &lt;li&gt;一个在外置：getExternalFilesDir() 或 getExternalCacheDir()，文件管理路径：/storage/emulated/0/Android/data/pkg/。其他应用可以在具有适当权限的情况下访问这些目录，但存储在这些目录中的文件仅供您的应用使用&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;在搭载 Android 9（API 级别 28）或更低版本的设备上，只要您的应用具有适当的存储权限，就可以访问属于其他应用的应用专用文件。为了让用户更好地管理自己的文件并减少混乱，以 Android 10（API 级别 29）及更高版本为目标平台的应用在默认情况下被授予了对外部存储空间的分区访问权限（即分区存储）。启用分区存储后，应用将无法访问属于其他应用的应用专属目录。&lt;/li&gt;
  &lt;li&gt;公用空间，通过 MediaStore API，Android11+访问其他应用放在这里的数据需要read权限；Android10访问其他应用放在这的数据需要read或者write权限；Android9- 访问所有文件都需要权限。八大目录：图片（DCIM/ 和 Pictures/）、视频（DCIM/、Movies/ 和 Pictures/）、音频（Alarms/、Audiobooks/、Music/、Notifications/、Podcasts/ 和 Ringtones/）、下载的文件（Download/）&lt;/li&gt;
  &lt;li&gt;相册里边的图片和视频，都是八大目录。比如，相机拍的无论是视频还是照片，都在DCIM/；其他地方下载的一般放在 DOWNLOAD/ 或者 Movice。截屏的放在DCIM/Screenshorts， 微信保存的图片放在Picture/WeiXin/&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;总结：数据库、SP、其他比较重要的放在内置私有目录，，头像、图片保存在外置私有目录，，明确共享的放在八大目录&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;检索第三方app&quot;&gt;检索第三方app&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &amp;lt;queries&amp;gt;&amp;lt;!--配置需要查询的三方app的包名--&amp;gt;
        &amp;lt;package android:name=&quot;com.whatsapp&quot; /&amp;gt;
        &amp;lt;package android:name=&quot;com.facebook.katana&quot; /&amp;gt;
        &amp;lt;package android:name=&quot;com.facebook.orca&quot; /&amp;gt;
        &amp;lt;package android:name=&quot;com.tencent.tim&quot; /&amp;gt;
        &amp;lt;package android:name=&quot;com.tencent.mm&quot; /&amp;gt;
        &amp;lt;package android:name=&quot;com.tencent.mobileqq&quot; /&amp;gt;
        &amp;lt;package android:name=&quot;com.instagram.android&quot; /&amp;gt;
        &amp;lt;package android:name=&quot;com.linkedin.android&quot; /&amp;gt;
        &amp;lt;package android:name=&quot;com.pinterest&quot; /&amp;gt;
    &amp;lt;/queries&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Wed, 06 Sep 2023 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2023/09/06/Android-%E6%9D%83%E9%99%90.html</link>
        <guid isPermaLink="true">http://localhost:4000/2023/09/06/Android-%E6%9D%83%E9%99%90.html</guid>
        
        
      </item>
    
      <item>
        <title>Android小功能</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Android 小功能积累&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;空间不够滚动来凑&quot;&gt;空间不够，滚动来凑&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;TextView
    android:id=&quot;@+id/device_name&quot;
    android:layout_width=&quot;100dp&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:ellipsize=&quot;marquee&quot;
    android:focusable=&quot;true&quot;
    android:focusableInTouchMode=&quot;true&quot;
    android:marqueeRepeatLimit=&quot;marquee_forever&quot;
    android:maxWidth=&quot;100dp&quot;
    android:scrollHorizontally=&quot;true&quot;
    android:singleLine=&quot;true&quot;
    android:textColor=&quot;@color/black&quot;
    android:textSize=&quot;18sp&quot;
    android:textStyle=&quot;bold&quot; /&amp;gt;

最后 setSelected(true)    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;log写入本地文件系统&quot;&gt;log写入本地文件系统&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    public static void write(String text) {
        SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss:SSS&quot;);
        text = sdf.format(new Date()) + &quot;: &quot; + text + &quot; \n&quot;;
        if (Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())) {
            if (Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {
                String sdPath = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS) + &quot;/&quot;;// sd/Download
                File file1 = new File(sdPath + &quot;log.txt&quot;);
                if (!file1.exists()) {
                    try {
                        file1.createNewFile();
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }
                FileOutputStream fileOutputStream = null;
                try {
                    fileOutputStream = new FileOutputStream(file1,true);
                    fileOutputStream.write(text.getBytes());
                    VTLog.d(&quot;write&quot;, &quot;&quot; + text);
                } catch (Exception e) {
                    e.printStackTrace();
                } finally {
                    if (fileOutputStream != null) {
                        try {
                            fileOutputStream.close();
                        } catch (IOException e) {
                            e.printStackTrace();
                        }
                    }
                }
            }
        }
    }
    
八大目录可保存。    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;沉浸式状态栏&quot;&gt;沉浸式状态栏&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;状态栏透明，然后根据内容适配颜色&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;简单的就是fitsSystemWindows，让系统自适配。&lt;/li&gt;
  &lt;li&gt;复杂的就是现接管window的标识（清除、add），设置activity全屏且状态栏不消失，自己适配padding和margin，根据距离适当移动内容区并控制状态栏字体颜色
 https://juejin.cn/post/7203563038301061181?&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;splite-sqlitedatabase&quot;&gt;splite （SQLiteDatabase）&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;轻量数据库，借用辅助类SQLiteOpenHelper实现增删改查&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;SQLiteOpenHelper，自己写一个继承之， &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;onCreate&lt;/code&gt; 仅首次创建数据执行，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;onUpgrade&lt;/code&gt; 仅新版本大于老版本执行。创建表时，可以指定主键&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;insert&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;update&lt;/code&gt; : 借助ContentValues&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;delete&lt;/code&gt;：”xxx=?”,填充？即可&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;query&lt;/code&gt; :借助Cursor&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;android-三种定时方法&quot;&gt;Android 三种定时方法&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 需要更新UI的
private Handler mHandler = new Handler(Looper.myLooper());
mHandler.postDelayed(new Runnable() {
                        @Override
                        public void run() {
                            mTabRecycleView.scrollToPosition(position);
                        }
                    }, 50);

2.Timer 与线程无关
Timer timer = new Timer();
timer.schedule(new TimerTask() {
    @Override
    public void run() {
       
    }
}, 50);

3.ScheduledExecutorService 与线程无关
ScheduledExecutorService scheduledExecutor = Executors.newScheduledThreadPool(1);
scheduledExecutor.schedule(new Runnable() {
    @Override
    public void run() {
        // 需要进行延时执行的操作
    }
}, delayMillis, TimeUnit.MILLISECONDS);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Fri, 17 Mar 2023 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2023/03/17/%E5%B0%8F%E5%8A%9F%E8%83%BD.html</link>
        <guid isPermaLink="true">http://localhost:4000/2023/03/17/%E5%B0%8F%E5%8A%9F%E8%83%BD.html</guid>
        
        <category>Android</category>
        
        
      </item>
    
      <item>
        <title>安全评估报告</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;有舆论或社会动员能力的功能的软件的自查报告&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;指导：https://baijiahao.baidu.com/s?id=1620538698297450950&amp;amp;wfr=spider&amp;amp;for=pc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;https://www.zhihu.com/question/307071708/answer/1035153886&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;填写报告网址：http://www.beian.gov.cn/portal/index.do&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 14 Mar 2023 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2023/03/14/%E5%AE%89%E5%85%A8%E8%AF%84%E4%BC%B0%E6%8A%A5%E5%91%8A.html</link>
        <guid isPermaLink="true">http://localhost:4000/2023/03/14/%E5%AE%89%E5%85%A8%E8%AF%84%E4%BC%B0%E6%8A%A5%E5%91%8A.html</guid>
        
        <category>上架</category>
        
        
      </item>
    
      <item>
        <title>Android12适配</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Google 正式推出的系统，两年后都会强制要求在Google Play上架需要适配，比如今年推出Android99，两年后target小于99就不让在Google play上架了。同时Google play严禁应用内置其他下载途径，会触犯【网络和设备滥用】。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;android12-适配其实很简单大多数应用只需修改以下几点&quot;&gt;Android12 适配其实很简单，大多数应用只需修改以下几点。&lt;/h1&gt;

&lt;h2 id=&quot;target&quot;&gt;target&lt;/h2&gt;
&lt;p&gt;修改为31即可。&lt;/p&gt;

&lt;h2 id=&quot;pendingintent&quot;&gt;PendingIntent&lt;/h2&gt;
&lt;p&gt;flag修改为 FLAG_IMMUTABLE 或者或上 FLAG_IMMUTABLE 即可。&lt;/p&gt;

&lt;h2 id=&quot;exported&quot;&gt;exported&lt;/h2&gt;
&lt;p&gt;在使用了 intent-filter 的组件上修改 exported = true 即可。&lt;/p&gt;

&lt;h2 id=&quot;require-包名&quot;&gt;require 包名&lt;/h2&gt;
&lt;p&gt;要访问的其他app的包名，要提前声明&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &amp;lt;queries&amp;gt;
        &amp;lt;package android:name=&quot;com.whatsapp&quot; /&amp;gt;
        &amp;lt;package android:name=&quot;com.facebook.katana&quot; /&amp;gt;
        &amp;lt;package android:name=&quot;com.facebook.orca&quot; /&amp;gt;
        &amp;lt;package android:name=&quot;com.twitter.android&quot; /&amp;gt;
        &amp;lt;package android:name=&quot;com.tencent.tim&quot; /&amp;gt;
        &amp;lt;package android:name=&quot;com.tencent.mm&quot; /&amp;gt;
        &amp;lt;package android:name=&quot;com.sina.weibo&quot; /&amp;gt;
        &amp;lt;package android:name=&quot;com.tencent.mobileqq&quot; /&amp;gt;
        &amp;lt;package android:name=&quot;com.instagram.android&quot; /&amp;gt;
        &amp;lt;package android:name=&quot;jp.naver.line.android&quot; /&amp;gt;
    &amp;lt;/queries&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;ble&quot;&gt;BLE&lt;/h2&gt;
&lt;p&gt;增加以下权限并请求&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	// app模拟蓝牙设备时使用
    &amp;lt;uses-permission android:name=&quot;android.permission.BLUETOOTH_ADVERTISE&quot; /&amp;gt;
    // app连接外围设备时使用
    &amp;lt;uses-permission android:name=&quot;android.permission.BLUETOOTH_CONNECT&quot; /&amp;gt;
    // app扫描外围设备时使用
    &amp;lt;uses-permission
        android:name=&quot;android.permission.BLUETOOTH_SCAN&quot;
        android:usesPermissionFlags=&quot;neverForLocation&quot; /&amp;gt;

    ArrayList&amp;lt;String&amp;gt; permissions = new ArrayList&amp;lt;&amp;gt;();
        if (Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.S) {
            permissions.add(Manifest.permission.BLUETOOTH_SCAN);
            permissions.add(Manifest.permission.BLUETOOTH_CONNECT);
        } else if (Build.VERSION.SDK_INT &amp;gt; Build.VERSION_CODES.P) {
            permissions.add(Manifest.permission.ACCESS_FINE_LOCATION);
        } else if (Build.VERSION.SDK_INT &amp;gt; Build.VERSION_CODES.M) {
            permissions.add(Manifest.permission.ACCESS_COARSE_LOCATION);
        }   

		BluetoothAdapter bluetoothAdapter = bluetoothManager.getAdapter();
            if (!bluetoothAdapter.isEnabled()) {
                // Android 12没有权限，去打开蓝牙，会gg!!!
                new RxPermissions(mActivity).requestEachCombined(Manifest.permission.BLUETOOTH_SCAN, Manifest.permission.BLUETOOTH_CONNECT)
                        .subscribe(new Consumer&amp;lt;Permission&amp;gt;() {
                            @Override
                            public void accept(Permission permission) throws Exception {
                                Intent enableBtIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);
                                startActivityForResult(enableBtIntent, OPEN_REQUEST_CODE);
                            }
                        }, new Consumer&amp;lt;Throwable&amp;gt;() {
                            @Override
                            public void accept(Throwable throwable) throws Exception {

                            }
                        });
            }else {
                requestBlePermision(permissions.toArray(new String[permissions.size()]))    

            }        
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Tue, 14 Mar 2023 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2023/03/14/Android12%E9%80%82%E9%85%8D.html</link>
        <guid isPermaLink="true">http://localhost:4000/2023/03/14/Android12%E9%80%82%E9%85%8D.html</guid>
        
        <category>Android</category>
        
        
      </item>
    
      <item>
        <title>list循环删除</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;倒着删、迭代器删、stream删&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;for 循环倒序删除
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  List&amp;lt;String&amp;gt; list = new ArrayList(initList);
  for (int i = list.size() - 1; i &amp;gt; 0; i--) {
      String str = list.get(i);
      if (ok) {
          list.remove(i);
      }
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;迭代器循环迭代器删除
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  List&amp;lt;String&amp;gt; list = new ArrayList(initList);
  for (Iterator&amp;lt;String&amp;gt; iterator = list.iterator(); iterator.hasNext(); ) {
      String str = iterator.next();
      if (ok) {
          iterator.remove();
      }
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;stream filter 过滤
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  List&amp;lt;String&amp;gt; list = new ArrayList(initList);
  if (Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.N) {
      list.stream().filter(new Predicate&amp;lt;String&amp;gt;() {
          @Override
          public boolean test(String s) {
              return true;
          }
      }).collect(Collectors.toList());
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 07 Feb 2023 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2023/02/07/list%E5%BE%AA%E7%8E%AF%E5%88%A0%E9%99%A4.html</link>
        <guid isPermaLink="true">http://localhost:4000/2023/02/07/list%E5%BE%AA%E7%8E%AF%E5%88%A0%E9%99%A4.html</guid>
        
        <category>Java</category>
        
        
      </item>
    
      <item>
        <title>乐观锁和悲观锁</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;乐观锁、悲观锁&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;乐观锁&quot;&gt;乐观锁&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;使用场景：多读少写。增加吞吐量。&lt;/li&gt;
  &lt;li&gt;一般对比version实现
    &lt;blockquote&gt;
      &lt;p&gt;常用例子：银行柜台，某人账号100，操作员A取走30，操作员B取走20。A提交版本加一，B提交时被驳回，B读后再加一才能更新。&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;悲观锁&quot;&gt;悲观锁&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;常见。&lt;/li&gt;
  &lt;li&gt;Synchronized 关键字，同时只有一个线程可访问。&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 06 Feb 2023 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2023/02/06/%E9%94%81.html</link>
        <guid isPermaLink="true">http://localhost:4000/2023/02/06/%E9%94%81.html</guid>
        
        <category>Java</category>
        
        
      </item>
    
  </channel>
</rss>
